{"version":3,"sources":["components/Info/Info.jsx","components/Temperature/WeatherCard.jsx","components/SearchBar/SearchBar.jsx","components/Info/Error.jsx","components/Forecast/Forecast.jsx","api/index.js","api/unsplash.js","App.js","index.js","components/Temperature/Cards.module.css","assets/Tokyo.jpg","App.module.css"],"names":["FormatLoader","styled","CircularProgress","TransparentCard","Card","Info","data","useState","Date","time","setTime","useEffect","timeID","setInterval","tick","clearInterval","utc","getTime","timezone","name","Typography","variant","toLocaleTimeString","getMonth","getDate","getFullYear","Math","round","parseFloat","main","temp","Grid","container","alignItems","justify","spacing","item","className","weather","id","description","charAt","toUpperCase","slice","SearchForm","form","showResult","TransparentPaper","Paper","useStyles","makeStyles","theme","root","padding","display","width","input","marginLeft","flex","iconButton","divider","height","margin","SearchBar","props","classes","cityName","setCityName","onSubmit","e","preventDefault","handleSubmit","component","InputBase","placeholder","inputProps","onChange","target","value","Divider","orientation","IconButton","type","aria-label","Error","CardContent","icon","faSadCry","LargeIcon","i","convertTemp","Forecast","console","log","daily","map","day","style","flexDirection","justifyContent","timestamp","date","weekday","Array","getDay","dt","min","max","url","API_KEY","fetchData","city","a","newURL","axios","get","fetchForecastData","lat","lon","create","baseURL","headers","Authorization","BackgroundPicture","div","imgUrl","Tokyo","App","cityData","setCityData","forecastData","setForecastData","cityImage","cityResult","cod","coord","forecastResult","fetchedData","colorTheme","createMuiTheme","palette","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.60bd9421.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography, Card, Grid, CircularProgress } from '@material-ui/core';\nimport styled from 'styled-components';\nimport WeatherIcon from 'react-icons-weather';\nimport 'fontsource-roboto';\nimport '../../assets/css/weather-icons.min.css';\n\nconst FormatLoader = styled(CircularProgress)`\n  color: rgba(255, 255, 255, 1);\n  margin: 3em;\n`;\n\nconst TransparentCard = styled(Card)`\n  transition: 0.5s;\n  display: flex;\n  flex-direction: column;\n  background-color: rgba(0, 0, 0, 0.3);\n  width: 30vw;\n  align-items: center;\n  padding: 1em;\n  margin: 1em;\n  margin-top: 0em;\n`;\n\nconst Info = ({ data }) => {\n  const [time, setTime] = useState(new Date());\n\n  useEffect(() => {\n    let timeID = setInterval(() => tick(), 1000);\n    return function cleanup() {\n      clearInterval(timeID);\n    };\n  });\n\n  const tick = () => {\n    let utc = new Date().getTime();\n    setTime(new Date(utc + data.timezone));\n  };\n\n  if (!data.name) {\n    return <FormatLoader />;\n  }\n\n  return (\n    <TransparentCard>\n      <Typography variant='h6'>\n        {time.toLocaleTimeString() + ' '}\n        {time.getMonth() + 1 + '/' + time.getDate() + '/' + time.getFullYear()}\n      </Typography>\n      <Typography variant='h3'>{data.name}</Typography>\n      <Typography variant='h1'>\n        {Math.round(((parseFloat(data.main.temp) - 273.15) * 9) / 5 + 32) +\n          '\\u00B0' +\n          'F'}\n      </Typography>\n      <Grid container alignItems='center' justify='center' spacing={1}>\n        <Grid item>\n          <i className={`wi wi-owm-${data.weather[0].id}`}></i>\n        </Grid>\n        <Grid item>\n          <Typography>\n            {data.weather[0].description.charAt(0).toUpperCase() +\n              data.weather[0].description.slice(1)}\n          </Typography>\n        </Grid>\n      </Grid>\n    </TransparentCard>\n  );\n};\n\nexport default Info;\n","import React from 'react';\nimport { CardContent, Typography, Grid, Card } from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst TransparentCard = styled(Card)`\n  background-color: rgba(255, 255, 255, 0.2);\n  alignitems: center;\n  justify-content: center;\n`;\n\nconst WeatherCard = props => {\n  return (\n    <Grid item xs={12} md={3} component={TransparentCard}>\n      <CardContent>\n        <Typography variant='h3'>Day</Typography>\n      </CardContent>\n    </Grid>\n  );\n};\n\nexport default WeatherCard;\n","import React, { useState } from 'react';\nimport { Paper, InputBase, Divider, IconButton } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styled from 'styled-components';\n\nconst SearchForm = styled.form`\n  top: ${({ showResult }) => (showResult ? '0%' : '30%')};\n  transition: 0.8s 0.5s;\n`;\n\nconst TransparentPaper = styled(Paper)`\n  background-color: rgba(0, 0, 0, 0.3);\n  margin: 2em;\n`;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\nconst SearchBar = props => {\n  const classes = useStyles();\n\n  const [cityName, setCityName] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    props.handleSubmit(cityName);\n  };\n\n  return (\n    <SearchForm onSubmit={onSubmit}>\n      <TransparentPaper component='form' className={classes.root}>\n        <InputBase\n          className={classes.input}\n          placeholder='Search City'\n          inputProps={{ 'aria-label': 'search city' }}\n          onChange={e => setCityName(e.target.value)}\n        />\n        <Divider className={classes.divider} orientation='vertical' />\n        <IconButton\n          type='submit'\n          className={classes.iconButton}\n          aria-label='search'\n        >\n          <SearchIcon />\n        </IconButton>\n      </TransparentPaper>\n    </SearchForm>\n  );\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport styled from 'styled-components';\nimport 'fontsource-roboto';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport { faCoffee, faSadCry } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst TransparentCard = styled(Card)`\n  display: flex;\n  flex-direction: column;\n  background-color: rgba(0, 0, 0, 0.3);\n  width: 30vw;\n  align-items: center;\n  padding: 1em;\n  margin: 1em;\n`;\n\nconst Error = () => {\n  return (\n    <TransparentCard>\n      <CardContent>\n        <Grid container alignItems='center' justify='center' spacing={1}>\n          <Grid item>\n            <FontAwesomeIcon icon={faSadCry} />\n          </Grid>\n          <Grid item>\n            <Typography variant='h6'>\n              Sorry, please try another city!\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </TransparentCard>\n  );\n};\n\nexport default Error;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Card, Typography, Grid } from '@material-ui/core';\n\nconst TransparentCard = styled(Card)`\n  background-color: rgba(0, 0, 0, 0.3);\n  padding: 0.5em;\n  margin: 1em;\n  height: 30vh;\n  width: 10vw;\n`;\n\nconst LargeIcon = styled.i`\n  margin-top: 0.1em;\n  font-size: 5em;\n  margin-bottom: 0.3em;\n`;\n\nconst getDay = timestamp => {\n  let date = new Date(timestamp * 1000);\n  let weekday = new Array(7);\n  weekday[0] = 'Sunday';\n  weekday[1] = 'Monday';\n  weekday[2] = 'Tuesday';\n  weekday[3] = 'Wednesday';\n  weekday[4] = 'Thursday';\n  weekday[5] = 'Friday';\n  weekday[6] = 'Saturday';\n  return weekday[date.getDay()];\n};\n\nconst convertTemp = temp => {\n  return Math.round(((parseFloat(temp) - 273.15) * 9) / 5 + 32);\n};\n\nconst Forecast = ({ data }) => {\n  console.log(data);\n  if (!data.daily) {\n    return <div></div>;\n  }\n\n  return (\n    <Grid container alignItems='center' justify='center'>\n      {data.daily.map(day => {\n        return (\n          <Grid item>\n            <TransparentCard>\n              <div\n                style={{\n                  flexDirection: 'column',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Typography variant='h6'>{getDay(day.dt)}</Typography>\n                <Typography variant='h5'>\n                  {convertTemp(day.temp.min) +\n                    '\\u00B0' +\n                    'F' +\n                    ' \\u2758 ' +\n                    convertTemp(day.temp.max) +\n                    '\\u00B0' +\n                    'F'}\n                </Typography>\n                {/* <i\n                  className={`wi wi-owm-${day.weather[0].id}`}\n                  style={{ fontSize: 6 + 'em' }}\n                ></i> */}\n                <LargeIcon\n                  className={`wi wi-owm-${day.weather[0].id}`}\n                ></LargeIcon>\n                <Typography variant='subtitle'>\n                  {day.weather[0].description.charAt(0).toUpperCase() +\n                    day.weather[0].description.slice(1)}\n                </Typography>\n              </div>\n            </TransparentCard>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default Forecast;\n","import axios from 'axios';\n\nconst DEFAULT_URL_1 =\n  'https://api.openweathermap.org/data/2.5/weather?q=tokyo&appid=3155c804170271132c11d1db77cedef0';\nconst DEFAULT_URL_2 =\n  'https://api.openweathermap.org/data/2.5/onecall?lat=35.692&lon=139.69&%20exclude=current,hourly&appid=3155c804170271132c11d1db77cedef0';\nconst DEFAULT_URL_3 =\n  'https://api.teleport.org/api/urban_areas/slug:tokyo/images/';\nconst url = 'https://api.openweathermap.org/data/2.5/';\nconst API_KEY = '3155c804170271132c11d1db77cedef0';\n\nexport const fetchData = async city => {\n  let newURL = DEFAULT_URL_1;\n\n  if (city) {\n    newURL = `${url}weather?q=${city}&appid=${API_KEY}`;\n  }\n\n  try {\n    const { data } = await axios.get(newURL);\n\n    return { data };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchForecastData = async (lat, lon) => {\n  let newURL = DEFAULT_URL_2;\n\n  if (lat && lon) {\n    newURL = `${url}onecall?lat=${lat}&lon=${lon}&%20exclude=current,hourly&appid=${API_KEY}`;\n  }\n\n  try {\n    const { data } = await axios.get(newURL);\n\n    return { data };\n  } catch (error) {\n    return error;\n  }\n};\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.unsplash.com',\n  headers: {\n    Authorization: 'Client-ID 0ij09alIdtXcqNK8bQ8Bmxuopn956qw0BMOrmQqwwjQ',\n  },\n});\n","import React, { useEffect, useState } from 'react';\nimport { Box, Card, Typography, Grid } from '@material-ui/core';\nimport styles from './App.module.css';\nimport cx from 'classnames';\nimport FadeIn from 'react-fade-in';\nimport Fade from '@material-ui/core/Fade';\nimport { Motion, spring } from 'react-motion';\nimport styled from 'styled-components';\n\nimport { Info, Cards, SearchBar, Error, Forecast } from './components';\nimport { fetchData, fetchForecastData } from './api';\nimport { faBookDead } from '@fortawesome/free-solid-svg-icons';\nimport Tokyo from './assets/Tokyo.jpg';\nimport unsplash from './api/unsplash';\n\nlet url = 'https://source.unsplash.com/1920x1080/?$tokyo%20city';\n\nconst BackgroundPicture = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0px;\n  left: 0px;\n\n  margin: 0;\n  padding: 0;\n\n  background-image: url('${props => (props.imgUrl ? props.imgUrl : Tokyo)}');\n  // background-image: url(${url});\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-size: cover;\n`;\n\nconst App = () => {\n  const [cityData, setCityData] = useState({});\n  const [forecastData, setForecastData] = useState({});\n  const [cityName, setCityName] = useState('Tokyo');\n\n  const cityImage = city => {\n    let url = `https://source.unsplash.com/1920x1080/?${city}`;\n    console.log(url);\n    return url;\n  };\n\n  const handleSubmit = city => {\n    setCityName(city);\n  };\n\n  useEffect(() => {\n    const fetchedData = async city => {\n      const cityResult = await fetchData(city);\n      let forecastResult;\n      if (cityResult.data && cityResult.data.cod === 200) {\n        forecastResult = await fetchForecastData(\n          cityResult.data.coord.lat,\n          cityResult.data.coord.lon\n        );\n      } else {\n        forecastResult = await fetchForecastData(0, 0);\n      }\n\n      setCityData(cityResult.data);\n      setForecastData(forecastResult.data);\n    };\n\n    fetchedData(cityName);\n  }, [cityName]);\n\n  console.log(cityName);\n\n  return (\n    <BackgroundPicture\n      imgUrl={\n        cityData && cityData.cod === 200\n          ? cityImage(cityName + '%20Skyline')\n          : cityImage('forest')\n      }\n    >\n      <div\n        style={{\n          flexDirection: 'column',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <SearchBar handleSubmit={handleSubmit} />\n        {cityData && cityData.cod === 200 ? (\n          <FadeIn>\n            <Info data={cityData} />\n          </FadeIn>\n        ) : (\n          <FadeIn>\n            <Error />\n          </FadeIn>\n        )}\n        {cityData && cityData.cod === 200 ? (\n          <Forecast data={forecastData} />\n        ) : (\n          <div></div>\n        )}\n      </div>\n    </BackgroundPicture>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-lato';\n\nimport App from './App';\nimport { ThemeProvider, createMuiTheme, CssBaseline } from '@material-ui/core';\n\nconst colorTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={colorTheme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3P0ws\",\"card\":\"Cards_card__1CIg_\"};","module.exports = __webpack_public_path__ + \"static/media/Tokyo.a529f16b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"App_overlay__1bKt8\",\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}